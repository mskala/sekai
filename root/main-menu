#!/usr/bin/perl

#
# MSK 001 Sekai Universal Host - simple top-level menu
# Copyright (C) 2014  Matthew Skala
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, version 3.
#
# As a special exception, if you create a document which uses this font, and
# embed this font or unaltered portions of this font into the document, this
# font does not by itself cause the resulting document to be covered by the
# GNU General Public License. This exception does not however invalidate any
# other reasons why the document might be covered by the GNU General Public
# License. If you modify this font, you may extend this exception to your
# version of the font, but you are not obligated to do so. If you do not
# wish to do so, delete this exception statement from your version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Matthew Skala
# http://ansuz.sooke.bc.ca/
# mskala@ansuz.sooke.bc.ca
#

require "lk204.pl";

&lk204_open;

while (1) {
  &update_mount_status;
  &lk204_clear_screen;
  &lk204_text("Main menu");

  $_=&lk204_horiz_menu(2,'sys','USB','MIDI','audio');
  if ($_ eq 'sys') {
    &sys_menu;
  } elsif ($_ eq 'USB') {
    &usb_menu;
  } elsif ($_ eq 'MIDI') {
    &midi_menu;
  } elsif ($_ eq 'audio') {
    &audio_menu;
  }
}

sub not_implemented {
  &lk204_set_cursor_pos(3,1);
  &lk204_text('not implemented');
  &lk204_horiz_menu(4,':-(');
}

sub sys_menu {
  while (1) {
    &update_mount_status;
    &lk204_clear_screen;
    &lk204_text("System menu");

    if ($lk204_is_ansi) {
      $_=&lk204_horiz_menu(2,'IP',$root_writable?'ro/':'rw/','main','X');
    } else {
      $_=&lk204_horiz_menu(2,'IP',$root_writable?'ro/':'rw/','main');
    }
    if ($_ eq 'IP') {
      &set_ip_address;
    } elsif ($_ eq 'ro/') {
      &make_root_read_only;
    } elsif ($_ eq 'rw/') {
      &make_root_writable;
    } elsif ($_ eq 'X') {
      &lk204_close;
      exit;
    } elsif ($_ eq 'main') {
      return;
    }
  }
}

sub usb_menu {
  &not_implemented;
}

sub midi_menu {
  while (1) {
    &update_mount_status;
    &lk204_clear_screen;
    &lk204_text("MIDI menu");

    $_=&lk204_horiz_menu(2,'conn','disco','tune','main');
    if ($_ eq 'conn') {
      &midi_conn;
    } elsif ($_ eq 'disco') {
      &midi_disco;
    } elsif ($_ eq 'tune') {
      &midi_tune;
    } elsif ($_ eq 'main') {
      return;
    }
  }
}

sub audio_menu {
  &not_implemented;
}

########################################################################

sub update_mount_status {
  open(RS,'/etc/msk001-root-status');
  $root_status=<RS>;
  chomp $root_status;
  close(RS);

  undef $/;
  open(MOUNTS,'/proc/mounts');
  $mounts=<MOUNTS>;
  close(MOUNTS);
  $/="\n";

  if ($root_status eq '') {
    if ($mounts=~m! / .*\brw\b!) {
      $root_writable=1;
      &lk204_led_red(1);
    } else {
      $root_writable=0;
      &lk204_led_green(1);
    }
  } else {
    $root_writable=($root_status eq 'read-write')?1:0;
  }

  if ($root_writable) {
    &lk204_led_red(1);
  } else {
    &lk204_led_green(1);
  }

}

########################################################################

sub make_root_read_only {
  if ($mounts!~m!tmpfs /etc tmpfs!m) {
    `/sbin/mount -n -t tmpfs tmpfs /mnt/rwfs/etc -o mode=0755`;
    `/usr/bin/cp -a /etc/* /mnt/rwfs/etc`;
    `/sbin/mount --move /mnt/rwfs/etc /etc`;
    `echo 'read-only' > /etc/msk001-root-status`;
  }
  `sync ; /bin/mount -n -o remount,ro /`;
}

sub make_root_writable {
  `/bin/mount -n -o remount,rw /`;
  if ($mounts=~m!tmpfs /etc tmpfs!m) {
    `/sbin/umount /etc`;
  }
}

########################################################################

sub set_ip_address {
  $psout=`ps -ax 2> /dev/null`;
  $ifcout=`/sbin/ifconfig eth0`;
  
  if ($psout=~m!/sbin/dhcpcd!) {
    $dhcpcd_running=1;
  } else {
    $dhcpcd_running=0;
  }
  if ($ifcout=~/\binet (\d+\.\d+\.\d+\.\d+) /) {
    $ip=$1;
  } else {
    $ip='';
  }

  &lk204_clear_screen;
  if ($dhcpcd_running) {
    &lk204_text('dhcpcd is running');
  } else {
    &lk204_text('dhcpcd NOT running');
  }

  &lk204_set_cursor_pos(2,1);
  if ($ip ne '') {
    &lk204_text("IP: $ip");
  } else {
    &lk204_text('no IP active');
  }

  &lk204_set_cursor_pos(3,1);
  &lk204_text('Choose config type');

  $_=&lk204_horiz_menu(4,'DHCP','STATIC','EXIT');
  if ($_ eq 'DHCP') {
    `killall dhcpcd` if $dhcpcd_running;
    `/sbin/dhcpcd &`;

  } elsif ($_ eq 'STATIC') {
    `killall dhcpcd` if $dhcpcd_running;
    $new_ip=&lk204_edit_ip_address(4,$ip);
    `/sbin/ifconfig eth0 $new_ip`;
  }
}

########################################################################

sub midi_conn {
  &not_implemented;
}

sub midi_disco {
  &lk204_set_cursor_pos(3,1);
  &lk204_text('disconnect all MIDI?');
  if (&lk204_horiz_menu(4,'YES','NO') eq 'YES') {
    `aconnect -x`;
  }
}

sub midi_tune {
  @note_cycle=qw/C C# D D# E F F# G G# A A# B/;

  &lk204_clear_screen;
  &lk204_text('MIDI tuner');
  &lk204_set_cursor_pos(2,1);
  &lk204_text('LR channel, UD pitch');
  
  &lk204_set_cursor_pos(3,1);
  &lk204_text('1  69 A5    440.00Hz');
  &lk204_set_cursor_pos(4,1);
  &lk204_text('2  69 A5    440.00Hz');
  
  $channel=1;
  $note[1]=69;
  $note[2]=69;
  `amidi -p 20:0 -S '91 45 64'`;
  `amidi -p 40:0 -S '91 45 64'`;
  `amidi -p 20:0 -S '81 45 00'`;
  `amidi -p 40:0 -S '81 45 00'`;

  while (1) {
    &lk204_set_cursor_pos(2+$channel,1);
    $_=&lk204_get_key;

    if ($_ eq 'B') { # up
      $note[$channel]++;
      $note[$channel]=127 if $note[$channel]>127;
      &lk204_text(sprintf('%d %3d %-4s %7.2fHz',
        $channel,$note[$channel],
        $note_cycle[$note[$channel]%12].int($note[$channel]/12),
        440*2**(($note[$channel]-69)/12)));
      $notenum=sprintf('%02X',$note[$channel]);
      if ($channel==1) {
        `amidi -p 20:0 -S '91 $notenum 64'`;
        `amidi -p 20:0 -S '81 $notenum 00'`;
      } else {
        `amidi -p 40:0 -S '91 $notenum 64'`;
        `amidi -p 40:0 -S '81 $notenum 00'`;
      }
    }

    if ($_ eq 'H') { # down
      $note[$channel]--;
      $note[$channel]=0 if $note[$channel]<0;
      &lk204_text(sprintf('%d %3d %-4s %7.2fHz',
        $channel,$note[$channel],
        $note_cycle[$note[$channel]%12].int($note[$channel]/12),
        440*2**(($note[$channel]-69)/12)));
      if ($channel==1) {
        `amidi -p 20:0 -S '91 $notenum 64'`;
        `amidi -p 20:0 -S '81 $notenum 00'`;
      } else {
        `amidi -p 40:0 -S '91 $notenum 64'`;
        `amidi -p 40:0 -S '81 $notenum 00'`;
      }
    }
    
    if ($_ eq 'D') { # first channel
      $channel=1;
    }
    
    if ($_ eq 'C') { # second channel
      $channel=2;
    }
    
    if ($_ eq 'E') { # exit
      return;
    }
  }
}
